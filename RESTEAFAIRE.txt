SI  TU SAIS PAS QUOI FAIRE : Y A DES TRUCS +/- FACILE OU +/- TRES CHIANT 

1) Erreur de syntax le retour

-() renvoie une erreur ca c est good !!
-(           ) renvoie une erreur ca c est good !!
-() cat renvoie pas d erreur , du coup command () not found !!!
des que is_only_space(ce qu il y a entre deux parantheses) == 1 c est une erreur de syntaxe

- ls && () separe meme pas la commande et du coup il cherche les fichiers "&&" et "()"

- ls &&    || ()
- () fait crahs ( avec l esapce au debut)
font crash notre minishell SEGFAULTTTT


jsuis pas mauvais pour trouver des erreurs mdrrrrr
a mon avis faut faire un retour sur progress

et changer dans parsegroupe :

progress(*cmd);
ret = do_preparse_line(cmd, data);

enfin
if (!progress(*cmd))
	ret = 0;
else
	do_preparse_line(cmd, data);

et faire en sorte que progress renvoie 0 si erreur de syntax

2) dans l exec si le retour du fork c est -1 faut se casser de l exec
c est pas trop claire mais en fait tu peux lancer /minishell avec -ulimit
une option chelou j ai plus la commande exacte mais jdemanderai a julien qui a test ca sur notre minishell hier x)
enfin bref il a limiter le nombre de creation de fork par processus a genre 5 et du coup il a lancer un truc avec 5 pipe et je quittais pas l exec enfin c etait de la merde x)

3) si tu fais ./minishell < /dev/urandom globalement le notre doit reagir comme dans bash
jsp si c est vraiment a gerer mais sur le discord les gens disaient y a un ptit bout de temps que fallait 
s occuper de ca avec une fonction autorise qu on a pas utilise : isatty jcrois

4)
- ls && (ls || ls)
parsing rate ??? ls devient juste un l x)

5) A verifier
si jamais on a un ambiguous redirect en redction out apres une reddirection in fonctionnel 
je pense que je close pas le fd_in
a verifier !
TLDR 1 : est ce que je close les fd si cmd->cmd == vide 
TLDR 2 : cat > mdr < * = ambiguous redirect : verifier si mdr est ferme
	 cat < mdr >> * = ambiguous redirect : verifier si mdr est ferme

